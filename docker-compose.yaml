version: '3'
services:
  postgres:
    build: pqsql/.
    container_name: postgres
    restart: always
    environment :
      POSTGRES_USER : postgres
      POSTGRES_PASSWORD : password
      POSTGRES_DB : postgresdb
    volumes:
    - ./volume/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  grafana: 
    container_name: grafana
    image: "grafana/grafana"
    restart: unless-stopped
    links:
      - postgres
    ports:
      - "3000:3000"
    volumes:
      - ./volume/grafana:/var/lib/grafana


  nifi:
    build: nifi/.
    container_name: nifi
    restart: unless-stopped
    environment:
      SINGLE_USER_CREDENTIALS_USERNAME : admin
      SINGLE_USER_CREDENTIALS_PASSWORD : adminadmin123
      NIFI_WEB_PROXY_HOST : 
      NIFI_WEB_HTTPS_HOST: 0.0.0.0
      NIFI_CLUSTER_ADDRESS: 0.0.0.0
      NIFI_REMOTE_INPUT_HOST: 0.0.0.0
      NIFI_WEB_HTTPS_PORT : '8000'
      NIFI_WEB_HTTP_PORT : '8443'
      # NIFI_HOME : /opt/nifi/nifi-current
      # NIFI_LOG_DIR : /opt/nifi/nifi-current/logs
      # NIFI_PID_DIR : /opt/nifi/nifi-current/run
      # NIFI_BASE_DIR  : /opt/nifi
    ports:
      - 8000:8000
      - 8443:8443
      
    volumes:
      # - ./volume/nifi:/opt/nifi/nifi-current/
      - ./data-aplikasi/csvdata:/opt/nifi/nifi-current/csvdata/
      - ./data-aplikasi/template:/opt/nifi/nifi-current/template/

  my-sql:
    build: mysql/.
    container_name: mysql
    restart: always
    environment:
      MYSQL_DATABASE: 'mysqldb'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - ./volume/mysql:/var/lib/mysql

  ocr_engine:
    build: ocr_engine/.
    container_name: ocr_engine
    restart: always
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '5000:5000'
    expose: 
      - '5000'
    command: [ "python","-m", "flask", "run", "--host=0.0.0.0"]
    

  jupyter_notebook:
    image: jupyter/datascience-notebook
    container_name: jupyter_notebook
    ports:
      - '8888:8888'
    command: "start-notebook.sh"
